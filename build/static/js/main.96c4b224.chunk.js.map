{"version":3,"sources":["services/persons.js","components/Filter.js","components/Button.js","components/PersonForm.js","components/Persons.js","components/Notification.js","hooks/useNotificationState.js","constants/MessageType.js","App.js","index.js"],"names":["baseUrl","newObj","axios","post","then","response","data","id","delete","changedObj","put","get","Filter","props","value","onChange","Button","onClick","type","className","text","PersonForm","onSubmit","newName","onNewName","newNumber","onNewNumber","Person","name","number","Persons","list","map","person","Notification","detail","useNotificationState","useState","setText","setTextWithTimer","newText","ms","setTimeout","MESSAGE_TYPE","App","persons","setPersons","setNewName","setNewNumber","filter","setFilter","useEffect","personsService","resetInputs","listToShow","length","toUpperCase","includes","event","target","preventDefault","undefined","find","concat","catch","error","window","confirm","found","alert","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.96c4b224.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nimport axios from \"axios\";\r\nconst baseUrl = \"/api/persons\";\r\n\r\nconst getAll = () => {\r\n    const promise = axios.get(baseUrl);\r\n    return promise.then(response => response.data);\r\n}\r\n\r\nconst create = newObj => {\r\n    const promise = axios.post(baseUrl, newObj);\r\n    return promise.then(response => response.data);\r\n}\r\n\r\nconst deletePerson = id => {\r\n    return axios.delete(`${baseUrl}/${id}`);\r\n}\r\n\r\nconst change = (id, changedObj) => {\r\n  const promise = axios.put(`${baseUrl}/${id}`, changedObj);\r\n  return promise.then(response => response.data);\r\n}\r\n\r\nexport default {\r\n  create,\r\n  deletePerson,\r\n  change,\r\n  getAll\r\n};","const Filter = (props) => {\r\n  return (\r\n    <>\r\n      filter shown with\r\n      <input value={props.value} onChange={props.onChange} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Filter;","import PropTypes from \"prop-types\";\r\n\r\nconst Button = (props) => {\r\n  return (\r\n    <button\r\n      onClick={props.onClick}\r\n      type={props.type}\r\n      className={props.className}\r\n    >\r\n      {props.text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  className: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n  type: PropTypes.string,\r\n};\r\n\r\nexport default Button;\r\n","import Button from \"./Button\";\r\n\r\nconst PersonForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.onSubmit}>\r\n      <div>\r\n        name: <input value={props.newName} onChange={props.onNewName} />\r\n      </div>\r\n      <div>\r\n        number: <input value={props.newNumber} onChange={props.onNewNumber} />\r\n      </div>\r\n      <div>\r\n        <Button type=\"submit\" text=\"add\"/>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n\r\nexport default PersonForm;\r\n","import Button from \"./Button\";\r\n\r\nconst Persons = (props) => {\r\n  return (\r\n    <ul>\r\n      {props.list.map((person) => (\r\n        <li key={person.id}>\r\n          <Person name={person.name} number={person.number} />\r\n          <Button\r\n            onClick={() => props.onClick(person.id, person.name)}\r\n            text=\"delete\"\r\n          />\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nconst Person = (props) => {\r\n  return (\r\n    <>\r\n      {props.name} {props.number}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Persons;\r\n","const Notification = ({ detail }) => {\r\n  if (detail === null) {\r\n    return null;\r\n  }\r\n  return detail.type === \"success\" ? (\r\n    <div className=\"success\">{detail.text}</div>\r\n  ) : detail.type === \"error\" ? (\r\n    <div className=\"error\">{detail.text}</div>\r\n  ) : null;\r\n};\r\n\r\nexport default Notification;","import { useState } from \"react\";\r\n\r\nconst useNotificationState = (props = null) => {\r\n  const [text, setText] = useState(props);\r\n\r\n  const setTextWithTimer = (newText, ms=5000) => {\r\n    setText(newText);\r\n    setTimeout(() => {\r\n      setText(null);\r\n    }, ms);\r\n  };\r\n\r\n  return [text, setTextWithTimer];\r\n};\r\n\r\nexport default useNotificationState;\r\n","export const MESSAGE_TYPE = {\r\n    SUCCESS: \"success\",\r\n    ERROR: \"error\"\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport personsService from \"./services/persons\";\r\nimport Filter from \"./components/Filter\";\r\nimport PersonForm from \"./components/PersonForm\";\r\nimport Persons from \"./components/Persons\";\r\nimport Notification from \"./components/Notification\";\r\nimport useNotificationState from \"./hooks/useNotificationState\";\r\nimport { MESSAGE_TYPE } from \"./constants/MessageType\";\r\n\r\nconst App = () => {\r\n  const [persons, setPersons] = useState([]);\r\n  const [newName, setNewName] = useState(\"\");\r\n  const [newNumber, setNewNumber] = useState(\"\");\r\n  const [filter, setFilter] = useState(\"\");\r\n  const [text, setTextWithTimer] = useNotificationState(null);\r\n\r\n  useEffect(() => {\r\n    personsService.getAll().then((persons) => setPersons(persons));\r\n  }, []);\r\n\r\n  const onNewName = (event) => {\r\n    setNewName(event.target.value);\r\n  };\r\n\r\n  const onNewNumber = (event) => {\r\n    setNewNumber(event.target.value);\r\n  };\r\n\r\n  const onFilterChange = (event) => {\r\n    setFilter(event.target.value);\r\n  };\r\n\r\n  const resetInputs = () => {\r\n    setNewName(\"\");\r\n    setNewNumber(\"\");\r\n  };\r\n\r\n  const onDelete = (id, name) => {\r\n    const confirmed = window.confirm(`Delete ${name}?`);\r\n    confirmed &&\r\n      personsService.deletePerson(id) &&\r\n      setPersons(persons.filter((person) => person.id !== id));\r\n  };\r\n\r\n  const addNewPerson = (event) => {\r\n    event.preventDefault();\r\n\r\n    if (persons.find((person) => person.name === newName) === undefined) {\r\n      const newPerson = {\r\n        name: newName,\r\n        number: newNumber,\r\n      };\r\n      personsService\r\n        .create(newPerson)\r\n        .then((data) => {\r\n          setPersons(persons.concat(data));\r\n          setTextWithTimer({\r\n            text: `Added ${newName}`,\r\n            type: MESSAGE_TYPE.SUCCESS,\r\n          });\r\n          resetInputs();\r\n        })\r\n        .catch((error) => {\r\n          const data = error.response.data.error;\r\n          setTextWithTimer({\r\n            text: data,\r\n            type: MESSAGE_TYPE.ERROR,\r\n          });\r\n        });\r\n    } else if (\r\n      persons.find(\r\n        (person) => person.name === newName && person.number !== newNumber\r\n      )\r\n    ) {\r\n      const confirmed = window.confirm(\r\n        `${newName} is already added to phonebook, replace the old number with a new one?`\r\n      );\r\n      if (confirmed) {\r\n        const found = persons.find(\r\n          (person) => person.name === newName && person.number !== newNumber\r\n        );\r\n        const changedObj = { ...found, number: newNumber };\r\n        personsService\r\n          .change(found.id, changedObj)\r\n          .then((newObj) => {\r\n            setPersons(\r\n              persons.map((person) =>\r\n                person.id !== found.id ? person : newObj\r\n              )\r\n            );\r\n            setTextWithTimer({\r\n              text: `Changed ${newName}'s number to ${newNumber}`,\r\n              type: MESSAGE_TYPE.SUCCESS,\r\n            });\r\n            resetInputs();\r\n          })\r\n          .catch((error) => {\r\n            setTextWithTimer({\r\n              text: `Contact ${newName} has already removed from server`,\r\n              type: MESSAGE_TYPE.ERROR,\r\n            });\r\n          });\r\n      }\r\n    } else {\r\n      alert(`${newName} is already added to phonebook`);\r\n    }\r\n  };\r\n\r\n  const listToShow =\r\n    filter.length > 0\r\n      ? persons.filter((person) =>\r\n          person.name.toUpperCase().includes(filter.toUpperCase())\r\n        )\r\n      : persons;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Phonebook</h2>\r\n      <Notification detail={text} />\r\n      <Filter value={filter} onChange={onFilterChange} />\r\n      <h3>add a new</h3>\r\n      <PersonForm\r\n        onSubmit={addNewPerson}\r\n        newName={newName}\r\n        onNewName={onNewName}\r\n        newNumber={newNumber}\r\n        onNewNumber={onNewNumber}\r\n      />\r\n      <h3>Numbers</h3>\r\n      <Persons list={listToShow} onClick={onDelete} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}